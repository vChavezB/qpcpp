name: ESP32 CI/CD

on:
  push:
    branches: [ actions ]
jobs:
    build:
        runs-on: ubuntu-latest
        container: espressif/idf:release-v4.4
        steps:
        - name: Pull Repo
          run: git clone https://github.com/vChavezB/qpcpp.git -b esp32
        - name: Build
          working-directory: qpcpp/examples/esp-idf/dpp-esp-idf
          run: |         
              . $IDF_PATH/export.sh
              idf.py build
              mkdir ~/build
              mv build/dpp.bin ~/build/app.bin
              mv build/bootloader/bootloader.bin ~/build/bootloader.bin
              mv build/partition_table/partition-table.bin ~/build/partition-table.bin
        - name: Upload binary
          uses: actions/upload-artifact@v3
          with:
            name: dpp-binary
            path: ~/build/
      
            
    Emulate:
        runs-on: ubuntu-latest
        container: mluis/qemu-esp32
        needs: build
        steps:
        - name: Download DPP binary
          uses: actions/download-artifact@v3
          with:
            name: dpp-binary
        - name: Create Image
          run: |
              dd if=/dev/zero bs=1M count=4 of=./flash.bin
              dd if=bootloader.bin bs=1 seek=$((0x1000)) of=flash.bin conv=notrunc
              dd if=partition-table.bin bs=1 seek=$((0x8000)) of=flash.bin conv=notrunc
              dd if=dpp.bin bs=1 seek=$((0x10000)) of=flash.bin conv=notrunc
              qemu-system-xtensa -nographic -M esp32 -m 4 -drive file=flash.bin,if=mtd,format=raw -nic user,model=open_eth,hostfwd=tcp::80-:80 -s

          
